
errormsg.c,712
bool anyErrors= FALSE;anyErrors14,237
static string fileName = "";fileName16,261
static int lineNum = 1;lineNum18,291
int EM_tokPos=0;EM_tokPos20,316
typedef struct intList {int i; struct intList *rest;} *IntList;intList24,354
typedef struct intList {int i; struct intList *rest;} *IntList;i24,354
typedef struct intList {int i; struct intList *rest;} *IntList;rest24,354
typedef struct intList {int i; struct intList *rest;} *IntList;IntList24,354
static IntList intList(int i, IntList rest) intList26,419
static IntList linePos=NULL;linePos32,540
void EM_newline(void)EM_newline34,570
void EM_error(int pos, char *message,...)EM_error39,647
void EM_reset(string fname)EM_reset58,1046

semant.c,323
Ty_ty actual_ty(Ty_ty ty){actual_ty11,172
struct expty transVar(S_table venv, S_table tenv, A_var v){transVar23,432
struct expty transExp(S_table venv, S_table tenv, A_exp a){transExp69,1729
void transDec(S_table venv, S_table tenv, A_dec d){transDec248,7076
Ty_ty transTy ( S_table tenv, A_ty a){transTy343,9888

errormsg.h,0

symbol.h,101
typedef struct S_symbol_ *S_symbol;S_symbol6,51
typedef struct TAB_table_ *S_table;S_table18,471

parse.c,86
A_exp parse(string fname) parse17,283
int main(int argc, char **argv) {main24,414

env.h,541
typedef struct E_enventry_ *E_enventry;E_enventry6,103
struct E_enventry_ {E_enventry_8,144
  enum {E_varEntry, E_funEntry} kind;E_varEntry9,165
  enum {E_varEntry, E_funEntry} kind;E_funEntry9,165
  enum {E_varEntry, E_funEntry} kind;kind9,165
    struct {Ty_ty ty;} var;ty11,212
    struct {Ty_ty ty;} var;var11,212
    struct {Ty_tyList formals; Ty_ty result;} fun;formals12,240
    struct {Ty_tyList formals; Ty_ty result;} fun;result12,240
    struct {Ty_tyList formals; Ty_ty result;} fun;fun12,240
  } u;u13,291

prabsyn.h,0

symbol.c,912
struct S_symbol_ {string name; S_symbol next;};S_symbol_7,97
struct S_symbol_ {string name; S_symbol next;};name7,97
struct S_symbol_ {string name; S_symbol next;};next7,97
static S_symbol mksymbol(string name, S_symbol next)mksymbol9,146
#define SIZE SIZE15,282
static S_symbol hashtable[SIZE];hashtable17,323
static unsigned int hash(char *s0)hash19,357
static int streq(string a, string b)streq26,482
S_symbol S_Symbol(string name)S_Symbol31,546
string S_name(S_symbol sym)S_name41,793
S_table S_empty(void) S_empty46,845
void S_enter(S_table t, S_symbol sym, void *value) {S_enter51,895
void *S_look(S_table t, S_symbol sym) {S_look55,977
static struct S_symbol_ marksym = {"<mark>",0};marksym59,1046
void S_beginScope(S_table t)S_beginScope61,1095
void S_endScope(S_table t)S_endScope65,1155
void S_dump(S_table t, void (*show)(S_symbol sym, void *binding)) {S_dump71,1242

semant.h,413
typedef void *Tr_exp; // haven't touch expression translation yetTr_exp7,84
struct expty {Tr_exp exp; Ty_ty ty;}; // intermediate representation and it's typeexpty8,150
struct expty {Tr_exp exp; Ty_ty ty;}; // intermediate representation and it's typeexp8,150
struct expty {Tr_exp exp; Ty_ty ty;}; // intermediate representation and it's typety8,150
struct expty expTy(Tr_exp exp, Ty_ty ty){expTy10,234

lex.yy.c,9364
#define  YY_INT_ALIGNED YY_INT_ALIGNED4,21
#define FLEX_SCANNERFLEX_SCANNER8,99
#define YY_FLEX_MAJOR_VERSION YY_FLEX_MAJOR_VERSION9,120
#define YY_FLEX_MINOR_VERSION YY_FLEX_MINOR_VERSION10,152
#define YY_FLEX_SUBMINOR_VERSION YY_FLEX_SUBMINOR_VERSION11,184
#define FLEX_BETAFLEX_BETA13,253
#define FLEXINT_HFLEXINT_H29,551
#define __STDC_LIMIT_MACROS __STDC_LIMIT_MACROS39,862
typedef int8_t flex_int8_t;flex_int8_t43,922
typedef uint8_t flex_uint8_t;flex_uint8_t44,950
typedef int16_t flex_int16_t;flex_int16_t45,980
typedef uint16_t flex_uint16_t;flex_uint16_t46,1010
typedef int32_t flex_int32_t;flex_int32_t47,1042
typedef uint32_t flex_uint32_t;flex_uint32_t48,1072
typedef signed char flex_int8_t;flex_int8_t50,1110
typedef short int flex_int16_t;flex_int16_t51,1143
typedef int flex_int32_t;flex_int32_t52,1175
typedef unsigned char flex_uint8_t; flex_uint8_t53,1201
typedef unsigned short int flex_uint16_t;flex_uint16_t54,1238
typedef unsigned int flex_uint32_t;flex_uint32_t55,1280
#define INT8_MIN INT8_MIN59,1366
#define INT16_MIN INT16_MIN62,1429
#define INT32_MIN INT32_MIN65,1496
#define INT8_MAX INT8_MAX68,1567
#define INT16_MAX INT16_MAX71,1629
#define INT32_MAX INT32_MAX74,1693
#define UINT8_MAX UINT8_MAX77,1762
#define UINT16_MAX UINT16_MAX80,1826
#define UINT32_MAX UINT32_MAX83,1892
#define YY_USE_CONSTYY_USE_CONST93,2062
#define YY_USE_CONSTYY_USE_CONST100,2183
#define yyconst yyconst106,2285
#define yyconstyyconst108,2313
#define YY_NULL YY_NULL112,2370
#define YY_SC_TO_UI(YY_SC_TO_UI119,2617
#define BEGIN BEGIN125,2848
#define YY_START YY_START131,3047
#define YYSTATE YYSTATE132,3087
#define YY_STATE_EOF(YY_STATE_EOF135,3170
#define YY_NEW_FILE YY_NEW_FILE138,3290
#define YY_END_OF_BUFFER_CHAR YY_END_OF_BUFFER_CHAR140,3329
#define YY_BUF_SIZE YY_BUF_SIZE149,3595
#define YY_BUF_SIZE YY_BUF_SIZE151,3627
#define YY_STATE_BUF_SIZE YY_STATE_BUF_SIZE157,3777
#define YY_TYPEDEF_YY_BUFFER_STATEYY_TYPEDEF_YY_BUFFER_STATE160,3885
typedef struct yy_buffer_state *YY_BUFFER_STATE;YY_BUFFER_STATE161,3920
#define EOB_ACT_CONTINUE_SCAN EOB_ACT_CONTINUE_SCAN168,4025
#define EOB_ACT_END_OF_FILE EOB_ACT_END_OF_FILE169,4057
#define EOB_ACT_LAST_MATCH EOB_ACT_LAST_MATCH170,4087
    #define YY_LESS_LINENO(YY_LESS_LINENO172,4117
#define yyless(yyless175,4232
#define unput(unput188,4587
#define YY_TYPEDEF_YY_SIZE_TYY_TYPEDEF_YY_SIZE_T191,4662
typedef size_t yy_size_t;yy_size_t192,4691
#define YY_STRUCT_YY_BUFFER_STATEYY_STRUCT_YY_BUFFER_STATE196,4759
struct yy_buffer_stateyy_buffer_state197,4793
	FILE *yy_input_file;yy_input_file199,4819
	char *yy_ch_buf;		/* input buffer */yy_ch_buf201,4842
	char *yy_buf_pos;		/* current position in input buffer */yy_buf_pos202,4880
	yy_size_t yy_buf_size;yy_buf_size207,5023
	int yy_n_chars;yy_n_chars212,5133
	int yy_is_our_buffer;yy_is_our_buffer218,5295
	int yy_is_interactive;yy_is_interactive225,5533
	int yy_at_bol;yy_at_bol231,5700
    int yy_bs_lineno; /**< The line count. */yy_bs_lineno233,5717
    int yy_bs_column; /**< The column count. */yy_bs_column234,5763
	int yy_fill_buffer;yy_fill_buffer239,5898
	int yy_buffer_status;yy_buffer_status241,5920
#define YY_BUFFER_NEW YY_BUFFER_NEW243,5944
#define YY_BUFFER_NORMAL YY_BUFFER_NORMAL244,5968
#define YY_BUFFER_EOF_PENDING YY_BUFFER_EOF_PENDING255,6466
static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */yy_buffer_stack_top261,6574
static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */yy_buffer_stack_max262,6644
static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */yy_buffer_stack263,6710
#define YY_CURRENT_BUFFER YY_CURRENT_BUFFER271,6978
#define YY_CURRENT_BUFFER_LVALUE YY_CURRENT_BUFFER_LVALUE278,7274
static char yy_hold_char;yy_hold_char281,7416
static int yy_n_chars;		/* number of characters read into yy_ch_buf */yy_n_chars282,7442
int yyleng;yyleng283,7513
static char *yy_c_buf_p = (char *) 0;yy_c_buf_p286,7571
static int yy_init = 0;		/* whether we need to initialize */yy_init287,7609
static int yy_start = 0;	/* start state number */yy_start288,7670
static int yy_did_buffer_switch_on_eof;yy_did_buffer_switch_on_eof293,7849
#define YY_FLUSH_BUFFER YY_FLUSH_BUFFER307,8369
#define yy_new_buffer yy_new_buffer317,8705
#define yy_set_interactive(yy_set_interactive319,8745
#define yy_set_bol(yy_set_bol329,9021
#define YY_AT_BOL(YY_AT_BOL339,9264
typedef unsigned char YY_CHAR;YY_CHAR341,9323
FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;yyin343,9355
FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;yyout343,9355
typedef int yy_state_type;yy_state_type345,9402
int yylineno = 1;yylineno349,9452
#define yytext_ptr yytext_ptr352,9492
#define YY_DO_BEFORE_ACTION YY_DO_BEFORE_ACTION362,9845
#define YY_NUM_RULES YY_NUM_RULES369,10008
#define YY_END_OF_BUFFER YY_END_OF_BUFFER370,10032
struct yy_trans_infoyy_trans_info373,10141
	flex_int32_t yy_verify;yy_verify375,10165
	flex_int32_t yy_nxt;yy_nxt376,10190
static yyconst flex_int16_t yy_accept[103] =yy_accept378,10216
static yyconst flex_int32_t yy_ec[256] =yy_ec394,10948
static yyconst flex_int32_t yy_meta[48] =yy_meta426,12670
static yyconst flex_int16_t yy_base[106] =yy_base435,13038
static yyconst flex_int16_t yy_def[106] =yy_def451,13786
static yyconst flex_int16_t yy_nxt[167] =yy_nxt467,14533
static yyconst flex_int16_t yy_chk[167] =yy_chk489,15676
static yy_state_type yy_last_accepting_state;yy_last_accepting_state511,16819
static char *yy_last_accepting_cpos;yy_last_accepting_cpos512,16865
int yy_flex_debug = 0;yy_flex_debug515,16929
#define REJECT REJECT520,17055
#define yymore(yymore521,17099
#define YY_MORE_ADJ YY_MORE_ADJ522,17145
#define YY_RESTORE_YY_MORE_OFFSETYY_RESTORE_YY_MORE_OFFSET523,17167
char *yytext;yytext524,17201
int charPos=1;charPos534,17374
int yywrap(void)yywrap536,17390
void adjust(void)adjust543,17436
string handle_string(string str){handle_string549,17497
#define INITIAL INITIAL604,18993
#define comment comment605,19011
#define YY_EXTRA_TYPE YY_EXTRA_TYPE616,19313
#define YY_READ_BUF_SIZE YY_READ_BUF_SIZE686,20592
#define YY_READ_BUF_SIZE YY_READ_BUF_SIZE688,20629
#define ECHO ECHO697,20869
#define YY_INPUT(YY_INPUT704,21079
#define yyterminate(yyterminate741,21993
#define YY_START_STACK_INCR YY_START_STACK_INCR746,22128
#define YY_FATAL_ERROR(YY_FATAL_ERROR751,22218
#define YY_DECL_IS_OURS YY_DECL_IS_OURS760,22451
#define YY_DECL YY_DECL764,22504
#define YY_USER_ACTIONYY_USER_ACTION771,22680
#define YY_BREAK YY_BREAK776,22773
#define YY_RULE_SETUP YY_RULE_SETUP779,22805
static int yy_get_next_buffer (void)yy_get_next_buffer1274,33095
    static yy_state_type yy_get_previous_state (void)yy_get_previous_state1408,36684
    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )yy_try_NUL_trans1440,37586
    static void yyunput (int c, register char * yy_bp )yyunput1463,38258
    static int yyinput (void)yyinput1502,39318
    void yyrestart  (FILE * input_file )yyrestart1579,41079
    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )yy_switch_to_buffer1596,41440
static void yy_load_buffer_state  (void)yy_load_buffer_state1627,42283
    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )yy_create_buffer1641,42756
    void yy_delete_buffer (YY_BUFFER_STATE  b )yy_delete_buffer1669,43447
    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )yy_init_buffer1692,43972
    void yy_flush_buffer (YY_BUFFER_STATE  b )yy_flush_buffer1720,44705
void yypush_buffer_state (YY_BUFFER_STATE new_buffer )yypush_buffer_state1749,45391
void yypop_buffer_state (void)yypop_buffer_state1779,46156
static void yyensure_buffer_stack (void)yyensure_buffer_stack1798,46551
YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )yy_scan_buffer1847,48167
YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )yy_scan_string1884,49240
YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )yy_scan_bytes1897,49657
#define YY_EXIT_FAILURE YY_EXIT_FAILURE1928,50380
static void yy_fatal_error (yyconst char* msg )yy_fatal_error1931,50414
#undef yylessyyless1939,50593
#define yyless(yyless1940,50607
int yyget_lineno  (void)yyget_lineno1959,51066
FILE *yyget_in  (void)yyget_in1968,51160
FILE *yyget_out  (void)yyget_out1976,51244
int yyget_leng  (void)yyget_leng1984,51344
char *yyget_text  (void)yyget_text1993,51431
void yyset_lineno (int  line_number )yyset_lineno2002,51547
void yyset_in (FILE *  in_str )yyset_in2014,51772
void yyset_out (FILE *  out_str )yyset_out2019,51833
int yyget_debug  (void)yyget_debug2024,51898
void yyset_debug (int  bdebug )yyset_debug2029,51957
static int yy_init_globals (void)yy_init_globals2034,52027
int yylex_destroy  (void)yylex_destroy2063,52709
static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )yy_flex_strncpy2089,53263
static int yy_flex_strlen (yyconst char * s )yy_flex_strlen2098,53424
void *yyalloc (yy_size_t  size )yyalloc2108,53541
void *yyrealloc  (void * ptr, yy_size_t  size )yyrealloc2113,53612
void yyfree (void * ptr )yyfree2125,54068
#define YYTABLES_NAME YYTABLES_NAME2130,54162

env.c,207
E_enventry E_VarEntry(Ty_ty ty){E_VarEntry6,75
E_enventry E_FunEntry(Ty_tyList formals, Ty_ty result){E_FunEntry12,211
S_table E_base_tenv(){E_base_tenv21,410
S_table E_base_venv(){E_base_venv29,612

util.h,364
typedef char *string;string3,21
typedef char bool;bool4,43
#define TRUE TRUE6,63
#define FALSE FALSE7,78
typedef struct U_boolList_ *U_boolList;U_boolList12,146
struct U_boolList_ {bool head; U_boolList tail;};U_boolList_13,186
struct U_boolList_ {bool head; U_boolList tail;};head13,186
struct U_boolList_ {bool head; U_boolList tail;};tail13,186

parse.h,0

types.h,1719
typedef struct Ty_ty_ *Ty_ty;Ty_ty8,137
typedef struct Ty_tyList_ *Ty_tyList;Ty_tyList9,167
typedef struct Ty_field_ *Ty_field;Ty_field10,205
typedef struct Ty_fieldList_ *Ty_fieldList;Ty_fieldList11,241
struct Ty_ty_ {enum {Ty_record, Ty_nil, Ty_int, Ty_string, Ty_array,Ty_ty_13,286
struct Ty_ty_ {enum {Ty_record, Ty_nil, Ty_int, Ty_string, Ty_array,Ty_record13,286
struct Ty_ty_ {enum {Ty_record, Ty_nil, Ty_int, Ty_string, Ty_array,Ty_nil13,286
struct Ty_ty_ {enum {Ty_record, Ty_nil, Ty_int, Ty_string, Ty_array,Ty_int13,286
struct Ty_ty_ {enum {Ty_record, Ty_nil, Ty_int, Ty_string, Ty_array,Ty_string13,286
struct Ty_ty_ {enum {Ty_record, Ty_nil, Ty_int, Ty_string, Ty_array,Ty_array13,286
		       Ty_name, Ty_void} kind;Ty_name14,355
		       Ty_name, Ty_void} kind;Ty_void14,355
		       Ty_name, Ty_void} kind;kind14,355
	       union {Ty_fieldList record;record15,388
		      Ty_ty array;array16,424
		      struct {S_symbol sym; Ty_ty ty;} name;sym17,445
		      struct {S_symbol sym; Ty_ty ty;} name;ty17,445
		      struct {S_symbol sym; Ty_ty ty;} name;name17,445
		    } u;u18,492
struct Ty_tyList_ {Ty_ty head; Ty_tyList tail;};Ty_tyList_21,513
struct Ty_tyList_ {Ty_ty head; Ty_tyList tail;};head21,513
struct Ty_tyList_ {Ty_ty head; Ty_tyList tail;};tail21,513
struct Ty_field_ {S_symbol name; Ty_ty ty;};Ty_field_22,562
struct Ty_field_ {S_symbol name; Ty_ty ty;};name22,562
struct Ty_field_ {S_symbol name; Ty_ty ty;};ty22,562
struct Ty_fieldList_ {Ty_field head; Ty_fieldList tail;};Ty_fieldList_23,607
struct Ty_fieldList_ {Ty_field head; Ty_fieldList tail;};head23,607
struct Ty_fieldList_ {Ty_field head; Ty_fieldList tail;};tail23,607

types.c,925
static struct Ty_ty_ tynil = {Ty_nil};tynil13,214
Ty_ty Ty_Nil(void) {return &tynil;}Ty_Nil14,253
static struct Ty_ty_ tyint = {Ty_int};tyint16,290
Ty_ty Ty_Int(void) {return &tyint;}Ty_Int17,329
static struct Ty_ty_ tystring = {Ty_string};tystring19,366
Ty_ty Ty_String(void) {return &tystring;}Ty_String20,411
static struct Ty_ty_ tyvoid = {Ty_void};tyvoid22,454
Ty_ty Ty_Void(void) {return &tyvoid;}Ty_Void23,495
Ty_ty Ty_Record(Ty_fieldList fields)Ty_Record25,534
Ty_ty Ty_Array(Ty_ty ty)Ty_Array32,665
Ty_ty Ty_Name(S_symbol sym, Ty_ty ty)Ty_Name39,778
Ty_tyList Ty_TyList(Ty_ty head, Ty_tyList tail)Ty_TyList48,926
Ty_field Ty_Field(S_symbol name, Ty_ty ty)Ty_Field55,1061
Ty_fieldList Ty_FieldList(Ty_field head, Ty_fieldList tail)Ty_FieldList62,1186
static char str_ty[][12] = {str_ty70,1382
void Ty_print(Ty_ty t)Ty_print75,1558
void TyList_print(Ty_tyList list)TyList_print84,1748

absyn.h,9912
typedef int A_pos;A_pos10,194
typedef struct A_var_ *A_var;A_var12,214
typedef struct A_exp_ *A_exp;A_exp13,244
typedef struct A_dec_ *A_dec;A_dec14,274
typedef struct A_ty_ *A_ty;A_ty15,304
typedef struct A_decList_ *A_decList;A_decList17,333
typedef struct A_expList_ *A_expList;A_expList18,371
typedef struct A_field_ *A_field;A_field19,409
typedef struct A_fieldList_ *A_fieldList;A_fieldList20,443
typedef struct A_fundec_ *A_fundec;A_fundec21,485
typedef struct A_fundecList_ *A_fundecList;A_fundecList22,521
typedef struct A_namety_ *A_namety;A_namety23,565
typedef struct A_nametyList_ *A_nametyList;A_nametyList24,601
typedef struct A_efield_ *A_efield;A_efield25,645
typedef struct A_efieldList_ *A_efieldList;A_efieldList26,681
typedef enum {A_plusOp, A_minusOp, A_timesOp, A_divideOp,A_plusOp28,726
typedef enum {A_plusOp, A_minusOp, A_timesOp, A_divideOp,A_minusOp28,726
typedef enum {A_plusOp, A_minusOp, A_timesOp, A_divideOp,A_timesOp28,726
typedef enum {A_plusOp, A_minusOp, A_timesOp, A_divideOp,A_divideOp28,726
	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;A_eqOp29,784
	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;A_neqOp29,784
	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;A_ltOp29,784
	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;A_leOp29,784
	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;A_gtOp29,784
	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;A_geOp29,784
	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;A_oper29,784
struct A_var_A_var_31,848
       {enum {A_simpleVar, A_fieldVar, A_subscriptVar} kind;A_simpleVar32,862
       {enum {A_simpleVar, A_fieldVar, A_subscriptVar} kind;A_fieldVar32,862
       {enum {A_simpleVar, A_fieldVar, A_subscriptVar} kind;A_subscriptVar32,862
       {enum {A_simpleVar, A_fieldVar, A_subscriptVar} kind;kind32,862
        A_pos pos;pos33,923
	union {S_symbol simple;simple34,942
	       struct {A_var var;var35,967
		       S_symbol sym;} field;sym36,994
		       S_symbol sym;} field;field36,994
	       struct {A_var var;var37,1025
		       A_exp exp;} subscript;exp38,1052
		       A_exp exp;} subscript;subscript38,1052
	     } u;u39,1084
struct A_exp_A_exp_42,1105
      {enum {A_varExp, A_nilExp, A_intExp, A_stringExp, A_callExp,A_varExp43,1119
      {enum {A_varExp, A_nilExp, A_intExp, A_stringExp, A_callExp,A_nilExp43,1119
      {enum {A_varExp, A_nilExp, A_intExp, A_stringExp, A_callExp,A_intExp43,1119
      {enum {A_varExp, A_nilExp, A_intExp, A_stringExp, A_callExp,A_stringExp43,1119
      {enum {A_varExp, A_nilExp, A_intExp, A_stringExp, A_callExp,A_callExp43,1119
	       A_opExp, A_recordExp, A_seqExp, A_assignExp, A_ifExp,A_opExp44,1186
	       A_opExp, A_recordExp, A_seqExp, A_assignExp, A_ifExp,A_recordExp44,1186
	       A_opExp, A_recordExp, A_seqExp, A_assignExp, A_ifExp,A_seqExp44,1186
	       A_opExp, A_recordExp, A_seqExp, A_assignExp, A_ifExp,A_assignExp44,1186
	       A_opExp, A_recordExp, A_seqExp, A_assignExp, A_ifExp,A_ifExp44,1186
	       A_whileExp, A_forExp, A_breakExp, A_letExp, A_arrayExp} kind;A_whileExp45,1248
	       A_whileExp, A_forExp, A_breakExp, A_letExp, A_arrayExp} kind;A_forExp45,1248
	       A_whileExp, A_forExp, A_breakExp, A_letExp, A_arrayExp} kind;A_breakExp45,1248
	       A_whileExp, A_forExp, A_breakExp, A_letExp, A_arrayExp} kind;A_letExp45,1248
	       A_whileExp, A_forExp, A_breakExp, A_letExp, A_arrayExp} kind;A_arrayExp45,1248
	       A_whileExp, A_forExp, A_breakExp, A_letExp, A_arrayExp} kind;kind45,1248
       A_pos pos;pos46,1318
       union {A_var var;var47,1336
	      int intt;intt49,1400
	      string stringg;stringg50,1417
	      struct {S_symbol func; A_expList args;} call;func51,1440
	      struct {S_symbol func; A_expList args;} call;args51,1440
	      struct {S_symbol func; A_expList args;} call;call51,1440
	      struct {A_oper oper; A_exp left; A_exp right;} op;oper52,1493
	      struct {A_oper oper; A_exp left; A_exp right;} op;left52,1493
	      struct {A_oper oper; A_exp left; A_exp right;} op;right52,1493
	      struct {A_oper oper; A_exp left; A_exp right;} op;op52,1493
	      struct {S_symbol typ; A_efieldList fields;} record;typ53,1551
	      struct {S_symbol typ; A_efieldList fields;} record;fields53,1551
	      struct {S_symbol typ; A_efieldList fields;} record;record53,1551
	      A_expList seq;seq54,1610
	      struct {A_var var; A_exp exp;} assign;var55,1632
	      struct {A_var var; A_exp exp;} assign;exp55,1632
	      struct {A_var var; A_exp exp;} assign;assign55,1632
	      struct {A_exp test, then, elsee;} iff; /* elsee is optional */test56,1678
	      struct {A_exp test, then, elsee;} iff; /* elsee is optional */then56,1678
	      struct {A_exp test, then, elsee;} iff; /* elsee is optional */elsee56,1678
	      struct {A_exp test, then, elsee;} iff; /* elsee is optional */iff56,1678
	      struct {A_exp test, body;} whilee;test57,1748
	      struct {A_exp test, body;} whilee;body57,1748
	      struct {A_exp test, body;} whilee;whilee57,1748
	      struct {S_symbol var; A_exp lo,hi,body; bool escape;} forr;var58,1790
	      struct {S_symbol var; A_exp lo,hi,body; bool escape;} forr;lo58,1790
	      struct {S_symbol var; A_exp lo,hi,body; bool escape;} forr;hi58,1790
	      struct {S_symbol var; A_exp lo,hi,body; bool escape;} forr;body58,1790
	      struct {S_symbol var; A_exp lo,hi,body; bool escape;} forr;escape58,1790
	      struct {S_symbol var; A_exp lo,hi,body; bool escape;} forr;forr58,1790
	      struct {A_decList decs; A_exp body;} let;decs60,1898
	      struct {A_decList decs; A_exp body;} let;body60,1898
	      struct {A_decList decs; A_exp body;} let;let60,1898
	      struct {S_symbol typ; A_exp size, init;} array;typ61,1947
	      struct {S_symbol typ; A_exp size, init;} array;size61,1947
	      struct {S_symbol typ; A_exp size, init;} array;init61,1947
	      struct {S_symbol typ; A_exp size, init;} array;array61,1947
	    } u;u62,2002
struct A_dec_ A_dec_65,2021
    {enum {A_functionDec, A_varDec, A_typeDec} kind;A_functionDec66,2036
    {enum {A_functionDec, A_varDec, A_typeDec} kind;A_varDec66,2036
    {enum {A_functionDec, A_varDec, A_typeDec} kind;A_typeDec66,2036
    {enum {A_functionDec, A_varDec, A_typeDec} kind;kind66,2036
     A_pos pos;pos67,2089
     union {A_fundecList function;function68,2105
	    struct {S_symbol var; S_symbol typ; A_exp init; bool escape;} var;var70,2199
	    struct {S_symbol var; S_symbol typ; A_exp init; bool escape;} var;typ70,2199
	    struct {S_symbol var; S_symbol typ; A_exp init; bool escape;} var;init70,2199
	    struct {S_symbol var; S_symbol typ; A_exp init; bool escape;} var;escape70,2199
	    struct {S_symbol var; S_symbol typ; A_exp init; bool escape;} var;var70,2199
	    A_nametyList type;type71,2271
	  } u;u72,2295
struct A_ty_ {enum {A_nameTy, A_recordTy, A_arrayTy} kind;A_ty_75,2310
struct A_ty_ {enum {A_nameTy, A_recordTy, A_arrayTy} kind;A_nameTy75,2310
struct A_ty_ {enum {A_nameTy, A_recordTy, A_arrayTy} kind;A_recordTy75,2310
struct A_ty_ {enum {A_nameTy, A_recordTy, A_arrayTy} kind;A_arrayTy75,2310
struct A_ty_ {enum {A_nameTy, A_recordTy, A_arrayTy} kind;kind75,2310
	      A_pos pos;pos76,2369
	      union {S_symbol name;name77,2387
		     A_fieldList record;record78,2416
		     S_symbol array;array79,2443
		   } u;u80,2466
struct A_field_ {S_symbol name, typ; A_pos pos; bool escape;};A_field_85,2524
struct A_field_ {S_symbol name, typ; A_pos pos; bool escape;};name85,2524
struct A_field_ {S_symbol name, typ; A_pos pos; bool escape;};typ85,2524
struct A_field_ {S_symbol name, typ; A_pos pos; bool escape;};pos85,2524
struct A_field_ {S_symbol name, typ; A_pos pos; bool escape;};escape85,2524
struct A_fieldList_ {A_field head; A_fieldList tail;};A_fieldList_86,2587
struct A_fieldList_ {A_field head; A_fieldList tail;};head86,2587
struct A_fieldList_ {A_field head; A_fieldList tail;};tail86,2587
struct A_expList_ {A_exp head; A_expList tail;};A_expList_87,2642
struct A_expList_ {A_exp head; A_expList tail;};head87,2642
struct A_expList_ {A_exp head; A_expList tail;};tail87,2642
struct A_fundec_ {A_pos pos;A_fundec_88,2691
struct A_fundec_ {A_pos pos;pos88,2691
                 S_symbol name; A_fieldList params; name89,2720
                 S_symbol name; A_fieldList params; params89,2720
		 S_symbol result; A_exp body;};result90,2773
		 S_symbol result; A_exp body;};body90,2773
struct A_fundecList_ {A_fundec head; A_fundecList tail;};A_fundecList_92,2808
struct A_fundecList_ {A_fundec head; A_fundecList tail;};head92,2808
struct A_fundecList_ {A_fundec head; A_fundecList tail;};tail92,2808
struct A_decList_ {A_dec head; A_decList tail;};A_decList_93,2866
struct A_decList_ {A_dec head; A_decList tail;};head93,2866
struct A_decList_ {A_dec head; A_decList tail;};tail93,2866
struct A_namety_ {S_symbol name; A_ty ty;};A_namety_94,2915
struct A_namety_ {S_symbol name; A_ty ty;};name94,2915
struct A_namety_ {S_symbol name; A_ty ty;};ty94,2915
struct A_nametyList_ {A_namety head; A_nametyList tail;};A_nametyList_95,2959
struct A_nametyList_ {A_namety head; A_nametyList tail;};head95,2959
struct A_nametyList_ {A_namety head; A_nametyList tail;};tail95,2959
struct A_efield_ {S_symbol name; A_exp exp;};A_efield_96,3017
struct A_efield_ {S_symbol name; A_exp exp;};name96,3017
struct A_efield_ {S_symbol name; A_exp exp;};exp96,3017
struct A_efieldList_ {A_efield head; A_efieldList tail;};A_efieldList_97,3063
struct A_efieldList_ {A_efield head; A_efieldList tail;};head97,3063
struct A_efieldList_ {A_efield head; A_efieldList tail;};tail97,3063

y.tab.c,10069
#define YYBISON YYBISON44,2037
#define YYBISON_VERSION YYBISON_VERSION47,2078
#define YYSKELETON_NAME YYSKELETON_NAME50,2133
#define YYPURE YYPURE53,2188
#define YYPUSH YYPUSH56,2227
#define YYPULL YYPULL59,2266
A_exp absyn_root;absyn_root74,2493
void yyerror(char *s)yyerror78,2555
#   define YY_NULLPTR YY_NULLPTR87,2723
#   define YY_NULLPTR YY_NULLPTR89,2761
# undef YYERROR_VERBOSEYYERROR_VERBOSE95,2866
# define YYERROR_VERBOSE YYERROR_VERBOSE96,2890
# define YYERROR_VERBOSE YYERROR_VERBOSE98,2923
# define YY_YY_Y_TAB_H_INCLUDEDYY_YY_Y_TAB_H_INCLUDED104,3082
# define YYDEBUG YYDEBUG107,3151
# define YYTOKENTYPEYYTOKENTYPE115,3256
  enum yytokentypeyytokentype116,3277
    LOWEST = 258,LOWEST118,3300
    FUNCTION = 259,FUNCTION119,3318
    TYPE = 260,TYPE120,3338
    ASSIGN = 261,ASSIGN121,3354
    THEN = 262,THEN122,3372
    ELSE = 263,ELSE123,3388
    DO = 264,DO124,3404
    OF = 265,OF125,3418
    AND = 266,AND126,3432
    OR = 267,OR127,3447
    EQ = 268,EQ128,3461
    NEQ = 269,NEQ129,3475
    LT = 270,LT130,3490
    LE = 271,LE131,3504
    GT = 272,GT132,3518
    GE = 273,GE133,3532
    PLUS = 274,PLUS134,3546
    MINUS = 275,MINUS135,3562
    TIMES = 276,TIMES136,3579
    DIVIDE = 277,DIVIDE137,3596
    UMINUS = 278,UMINUS138,3614
    ID = 279,ID139,3632
    STRING = 280,STRING140,3646
    INT = 281,INT141,3664
    COMMA = 282,COMMA142,3679
    COLON = 283,COLON143,3696
    SEMICOLON = 284,SEMICOLON144,3713
    LPAREN = 285,LPAREN145,3734
    RPAREN = 286,RPAREN146,3752
    LBRACK = 287,LBRACK147,3770
    RBRACK = 288,RBRACK148,3788
    LBRACE = 289,LBRACE149,3806
    RBRACE = 290,RBRACE150,3824
    DOT = 291,DOT151,3842
    ARRAY = 292,ARRAY152,3857
    IF = 293,IF153,3874
    WHILE = 294,WHILE154,3888
    FOR = 295,FOR155,3905
    TO = 296,TO156,3920
    LET = 297,LET157,3934
    IN = 298,IN158,3949
    END = 299,END159,3963
    BREAK = 300,BREAK160,3978
    NIL = 301,NIL161,3995
    VAR = 302VAR162,4010
#define LOWEST LOWEST166,4051
#define FUNCTION FUNCTION167,4070
#define TYPE TYPE168,4091
#define ASSIGN ASSIGN169,4108
#define THEN THEN170,4127
#define ELSE ELSE171,4144
#define DO DO172,4161
#define OF OF173,4176
#define AND AND174,4191
#define OR OR175,4207
#define EQ EQ176,4222
#define NEQ NEQ177,4237
#define LT LT178,4253
#define LE LE179,4268
#define GT GT180,4283
#define GE GE181,4298
#define PLUS PLUS182,4313
#define MINUS MINUS183,4330
#define TIMES TIMES184,4348
#define DIVIDE DIVIDE185,4366
#define UMINUS UMINUS186,4385
#define ID ID187,4404
#define STRING STRING188,4419
#define INT INT189,4438
#define COMMA COMMA190,4454
#define COLON COLON191,4472
#define SEMICOLON SEMICOLON192,4490
#define LPAREN LPAREN193,4512
#define RPAREN RPAREN194,4531
#define LBRACK LBRACK195,4550
#define RBRACK RBRACK196,4569
#define LBRACE LBRACE197,4588
#define RBRACE RBRACE198,4607
#define DOT DOT199,4626
#define ARRAY ARRAY200,4642
#define IF IF201,4660
#define WHILE WHILE202,4675
#define FOR FOR203,4693
#define TO TO204,4709
#define LET LET205,4724
#define IN IN206,4740
#define END END207,4755
#define BREAK BREAK208,4771
#define NIL NIL209,4789
#define VAR VAR210,4805
typedef union YYSTYPE YYSTYPE;YYSTYPE214,4896
union YYSTYPEYYSTYPE215,4927
	int pos;pos219,4983
	int ival;ival220,4993
	string sval;sval221,5004
    A_exp exp;exp222,5018
    A_expList explist;explist223,5033
    A_var var;var224,5056
    A_dec dec;dec225,5071
    A_decList decs;decs226,5086
    A_ty ty;ty227,5106
    A_fundec fundec;fundec228,5119
    A_fundecList fundecList;fundecList229,5140
    A_nametyList tydecList;tydecList230,5169
    A_fieldList tyfields;tyfields231,5197
    A_field tyfield;tyfield232,5223
    A_namety tydec;tydec233,5244
    A_efield efield;efield234,5264
    A_efieldList efieldList;efieldList235,5285
# define YYSTYPE_IS_TRIVIAL YYSTYPE_IS_TRIVIAL240,5358
# define YYSTYPE_IS_DECLARED YYSTYPE_IS_DECLARED241,5388
# undef shortshort256,5615
typedef YYTYPE_UINT8 yytype_uint8;yytype_uint8260,5657
typedef unsigned char yytype_uint8;yytype_uint8262,5698
typedef YYTYPE_INT8 yytype_int8;yytype_int8266,5761
typedef signed char yytype_int8;yytype_int8268,5800
typedef YYTYPE_UINT16 yytype_uint16;yytype_uint16272,5862
typedef unsigned short int yytype_uint16;yytype_uint16274,5905
typedef YYTYPE_INT16 yytype_int16;yytype_int16278,5975
typedef short int yytype_int16;yytype_int16280,6016
#  define YYSIZE_T YYSIZE_T285,6095
#  define YYSIZE_T YYSIZE_T287,6150
#  define YYSIZE_T YYSIZE_T290,6259
#  define YYSIZE_T YYSIZE_T292,6292
#define YYSIZE_MAXIMUM YYSIZE_MAXIMUM296,6340
#   define YY_(YY_302,6510
#  define YY_(YY_306,6596
#  define YY_ATTRIBUTE(YY_ATTRIBUTE314,6853
#  define YY_ATTRIBUTE(YY_ATTRIBUTE316,6909
# define YY_ATTRIBUTE_PURE YY_ATTRIBUTE_PURE321,6992
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE_UNUSED325,7083
#  define _Noreturn _Noreturn331,7280
#  define _Noreturn _Noreturn333,7329
# define YYUSE(YYUSE339,7489
# define YYUSE(YYUSE341,7526
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN346,7701
# define YY_IGNORE_MAYBE_UNINITIALIZED_END YY_IGNORE_MAYBE_UNINITIALIZED_END350,7911
# define YY_INITIAL_VALUE(YY_INITIAL_VALUE353,7997
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGINYY_IGNORE_MAYBE_UNINITIALIZED_BEGIN356,8087
# define YY_IGNORE_MAYBE_UNINITIALIZED_ENDYY_IGNORE_MAYBE_UNINITIALIZED_END357,8132
# define YY_INITIAL_VALUE(YY_INITIAL_VALUE360,8207
#    define YYSTACK_ALLOC YYSTACK_ALLOC371,8455
#    define YYSTACK_ALLOC YYSTACK_ALLOC375,8618
#    define alloca alloca378,8738
#    define YYSTACK_ALLOC YYSTACK_ALLOC380,8774
#      define EXIT_SUCCESS EXIT_SUCCESS385,9004
#  define YYSTACK_FREE(YYSTACK_FREE394,9154
#   define YYSTACK_ALLOC_MAXIMUM YYSTACK_ALLOC_MAXIMUM400,9544
#  define YYSTACK_ALLOC YYSTACK_ALLOC403,9626
#  define YYSTACK_FREE YYSTACK_FREE404,9659
#   define YYSTACK_ALLOC_MAXIMUM YYSTACK_ALLOC_MAXIMUM406,9721
#    define EXIT_SUCCESS EXIT_SUCCESS413,10018
#   define YYMALLOC YYMALLOC417,10083
#   define YYFREE YYFREE423,10256
union yyallocyyalloc437,10652
  yytype_int16 yyss_alloc;yyss_alloc439,10668
  YYSTYPE yyvs_alloc;yyvs_alloc440,10695
# define YYSTACK_GAP_MAXIMUM YYSTACK_GAP_MAXIMUM444,10796
# define YYSTACK_BYTES(YYSTACK_BYTES448,10944
# define YYCOPY_NEEDED YYCOPY_NEEDED452,11059
# define YYSTACK_RELOCATE(YYSTACK_RELOCATE459,11368
#   define YYCOPY(YYCOPY477,12247
#   define YYCOPY(YYCOPY480,12353
#define YYFINAL YYFINAL493,12822
#define YYLAST YYLAST495,12882
#define YYNTOKENS YYNTOKENS498,12945
#define YYNNTS YYNNTS500,13008
#define YYNRULES YYNRULES502,13063
#define YYNSTATES YYNSTATES504,13122
#define YYUNDEFTOK YYUNDEFTOK508,13262
#define YYMAXUTOK YYMAXUTOK509,13284
#define YYTRANSLATE(YYTRANSLATE511,13309
static const yytype_uint8 yytranslate[] =yytranslate516,13585
static const yytype_uint8 yyrline[] =yyrline553,15930
static const char *const yytname[] =yytname568,16649
static const yytype_uint16 yytoknum[] =yytoknum585,17489
#define YYPACT_NINF YYPACT_NINF595,17893
#define yypact_value_is_default(yypact_value_is_default597,17919
#define YYTABLE_NINF YYTABLE_NINF600,17991
#define yytable_value_is_error(yytable_value_is_error602,18016
static const yytype_int16 yypact[] =yypact607,18186
static const yytype_uint8 yydefact[] =yydefact629,19453
static const yytype_int8 yypgoto[] =yypgoto649,20565
static const yytype_int8 yydefgoto[] =yydefgoto656,20784
static const yytype_int16 yytable[] =yytable665,21178
static const yytype_int16 yycheck[] =yycheck699,23355
static const yytype_uint8 yystos[] =yystos735,25633
static const yytype_uint8 yyr1[] =yyr1755,26783
static const yytype_uint8 yyr2[] =yyr2767,27396
#define yyerrok yyerrok779,27934
#define yyclearin yyclearin780,27976
#define YYEMPTY YYEMPTY781,28019
#define YYEOF YYEOF782,28048
#define YYACCEPT YYACCEPT784,28075
#define YYABORT YYABORT785,28116
#define YYERROR YYERROR786,28156
#define YYRECOVERING(YYRECOVERING789,28198
#define YYBACKUP(YYBACKUP791,28239
#define YYTERROR YYTERROR809,29254
#define YYERRCODE YYERRCODE810,29280
#  define YYFPRINTF YYFPRINTF819,29437
# define YYDPRINTF(YYDPRINTF822,29474
# define YY_LOCATION_PRINT(YY_LOCATION_PRINT830,29770
# define YY_SYMBOL_PRINT(YY_SYMBOL_PRINT834,29828
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)yy_symbol_value_print851,30629
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)yy_symbol_print870,31028
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)yy_stack_print885,31592
# define YY_STACK_PRINT(YY_STACK_PRINT896,31842
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule)yy_reduce_print908,32289
# define YY_REDUCE_PRINT(YY_REDUCE_PRINT927,32897
int yydebug;yydebug935,33187
# define YYDPRINTF(YYDPRINTF937,33221
# define YY_SYMBOL_PRINT(YY_SYMBOL_PRINT938,33246
# define YY_STACK_PRINT(YY_STACK_PRINT939,33301
# define YY_REDUCE_PRINT(YY_REDUCE_PRINT940,33338
# define YYINITDEPTH YYINITDEPTH946,33472
# define YYMAXDEPTH YYMAXDEPTH957,33828
#   define yystrlen yystrlen965,33947
yystrlen (const char *yystr)yystrlen969,34033
#   define yystpcpy yystpcpy981,34259
yystpcpy (char *yydest, const char *yysrc)yystpcpy986,34397
yytnamerr (char *yyres, const char *yystr)yytnamerr1008,35045
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,yysyntax_error1056,36207
# define YYCASE_(YYCASE_1132,39593
# undef YYCASE_YYCASE_1142,40144
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)yydestruct1188,41268
int yychar;yychar1204,41576
YYSTYPE yylval;yylval1207,41640
int yynerrs;yynerrs1209,41695
yyparse (void)yyparse1217,41757
#define YYPOPSTACK(YYPOPSTACK1257,42767

y.tab.h,3547
# define YY_YY_Y_TAB_H_INCLUDEDYY_YY_Y_TAB_H_INCLUDED34,1545
# define YYDEBUG YYDEBUG37,1614
# define YYTOKENTYPEYYTOKENTYPE45,1719
  enum yytokentypeyytokentype46,1740
    LOWEST = 258,LOWEST48,1763
    FUNCTION = 259,FUNCTION49,1781
    TYPE = 260,TYPE50,1801
    ASSIGN = 261,ASSIGN51,1817
    THEN = 262,THEN52,1835
    ELSE = 263,ELSE53,1851
    DO = 264,DO54,1867
    OF = 265,OF55,1881
    AND = 266,AND56,1895
    OR = 267,OR57,1910
    EQ = 268,EQ58,1924
    NEQ = 269,NEQ59,1938
    LT = 270,LT60,1953
    LE = 271,LE61,1967
    GT = 272,GT62,1981
    GE = 273,GE63,1995
    PLUS = 274,PLUS64,2009
    MINUS = 275,MINUS65,2025
    TIMES = 276,TIMES66,2042
    DIVIDE = 277,DIVIDE67,2059
    UMINUS = 278,UMINUS68,2077
    ID = 279,ID69,2095
    STRING = 280,STRING70,2109
    INT = 281,INT71,2127
    COMMA = 282,COMMA72,2142
    COLON = 283,COLON73,2159
    SEMICOLON = 284,SEMICOLON74,2176
    LPAREN = 285,LPAREN75,2197
    RPAREN = 286,RPAREN76,2215
    LBRACK = 287,LBRACK77,2233
    RBRACK = 288,RBRACK78,2251
    LBRACE = 289,LBRACE79,2269
    RBRACE = 290,RBRACE80,2287
    DOT = 291,DOT81,2305
    ARRAY = 292,ARRAY82,2320
    IF = 293,IF83,2337
    WHILE = 294,WHILE84,2351
    FOR = 295,FOR85,2368
    TO = 296,TO86,2383
    LET = 297,LET87,2397
    IN = 298,IN88,2412
    END = 299,END89,2426
    BREAK = 300,BREAK90,2441
    NIL = 301,NIL91,2458
    VAR = 302VAR92,2473
#define LOWEST LOWEST96,2514
#define FUNCTION FUNCTION97,2533
#define TYPE TYPE98,2554
#define ASSIGN ASSIGN99,2571
#define THEN THEN100,2590
#define ELSE ELSE101,2607
#define DO DO102,2624
#define OF OF103,2639
#define AND AND104,2654
#define OR OR105,2670
#define EQ EQ106,2685
#define NEQ NEQ107,2700
#define LT LT108,2716
#define LE LE109,2731
#define GT GT110,2746
#define GE GE111,2761
#define PLUS PLUS112,2776
#define MINUS MINUS113,2793
#define TIMES TIMES114,2811
#define DIVIDE DIVIDE115,2829
#define UMINUS UMINUS116,2848
#define ID ID117,2867
#define STRING STRING118,2882
#define INT INT119,2901
#define COMMA COMMA120,2917
#define COLON COLON121,2935
#define SEMICOLON SEMICOLON122,2953
#define LPAREN LPAREN123,2975
#define RPAREN RPAREN124,2994
#define LBRACK LBRACK125,3013
#define RBRACK RBRACK126,3032
#define LBRACE LBRACE127,3051
#define RBRACE RBRACE128,3070
#define DOT DOT129,3089
#define ARRAY ARRAY130,3105
#define IF IF131,3123
#define WHILE WHILE132,3138
#define FOR FOR133,3156
#define TO TO134,3172
#define LET LET135,3187
#define IN IN136,3203
#define END END137,3218
#define BREAK BREAK138,3234
#define NIL NIL139,3252
#define VAR VAR140,3268
typedef union YYSTYPE YYSTYPE;YYSTYPE144,3359
union YYSTYPEYYSTYPE145,3390
	int pos;pos149,3447
	int ival;ival150,3457
	string sval;sval151,3468
    A_exp exp;exp152,3482
    A_expList explist;explist153,3497
    A_var var;var154,3520
    A_dec dec;dec155,3535
    A_decList decs;decs156,3550
    A_ty ty;ty157,3570
    A_fundec fundec;fundec158,3583
    A_fundecList fundecList;fundecList159,3604
    A_nametyList tydecList;tydecList160,3633
    A_fieldList tyfields;tyfields161,3661
    A_field tyfield;tyfield162,3687
    A_namety tydec;tydec163,3708
    A_efield efield;efield164,3728
    A_efieldList efieldList;efieldList165,3749
# define YYSTYPE_IS_TRIVIAL YYSTYPE_IS_TRIVIAL170,3823
# define YYSTYPE_IS_DECLARED YYSTYPE_IS_DECLARED171,3853

util.c,156
void *checked_malloc(int len)checked_malloc9,130
string String(char *s)String18,271
U_boolList U_BoolList(bool head, U_boolList tail)U_BoolList24,363

prabsyn.c,1183
static void indent(FILE *out, int d) {indent27,1069
static void pr_var(FILE *out, A_var v, int d) {pr_var33,1206
static char str_oper[][12] = {str_oper54,1814
static void pr_oper(FILE *out, A_oper d) {pr_oper58,1954
void pr_exp(FILE *out, A_exp v, int d) {pr_exp63,2077
static void pr_dec(FILE *out, A_dec v, int d) {pr_dec142,4571
static void pr_ty(FILE *out, A_ty v, int d) {pr_ty166,5248
static void pr_field(FILE *out, A_field v, int d) {pr_field184,5637
static void pr_fieldList(FILE *out, A_fieldList v, int d) {pr_fieldList191,5885
static void pr_expList(FILE *out, A_expList v, int d) {pr_expList201,6154
static void pr_fundec(FILE *out, A_fundec v, int d) {pr_fundec213,6417
static void pr_fundecList(FILE *out, A_fundecList v, int d) {pr_fundecList223,6727
static void pr_decList(FILE *out, A_decList v, int d) {pr_decList233,7003
static void pr_namety(FILE *out, A_namety v, int d) {pr_namety245,7266
static void pr_nametyList(FILE *out, A_nametyList v, int d) {pr_nametyList251,7433
static void pr_efield(FILE *out, A_efield v, int d) {pr_efield261,7709
static void pr_efieldList(FILE *out, A_efieldList v, int d) {pr_efieldList270,7926

makefile,0

absyn.c,2392
A_var A_SimpleVar(A_pos pos, S_symbol sym)A_SimpleVar10,255
A_var A_FieldVar(A_pos pos, A_var var, S_symbol sym)A_FieldVar18,404
A_var A_SubscriptVar(A_pos pos, A_var var, A_exp exp)A_SubscriptVar27,586
A_exp A_VarExp(A_pos pos, A_var var)A_VarExp37,782
A_exp A_NilExp(A_pos pos)A_NilExp45,919
A_exp A_IntExp(A_pos pos, int i)A_IntExp52,1030
A_exp A_StringExp(A_pos pos, string s)A_StringExp60,1162
A_exp A_CallExp(A_pos pos, S_symbol func, A_expList args)A_CallExp68,1306
A_exp A_OpExp(A_pos pos, A_oper oper, A_exp left, A_exp right)A_OpExp77,1494
A_exp A_RecordExp(A_pos pos, S_symbol typ, A_efieldList fields)A_RecordExp87,1703
A_exp A_SeqExp(A_pos pos, A_expList seq)A_SeqExp96,1905
A_exp A_AssignExp(A_pos pos, A_var var, A_exp exp)A_AssignExp104,2046
A_exp A_IfExp(A_pos pos, A_exp test, A_exp then, A_exp elsee)A_IfExp113,2229
A_exp A_WhileExp(A_pos pos, A_exp test, A_exp body)A_WhileExp123,2440
A_exp A_ForExp(A_pos pos, S_symbol var, A_exp lo, A_exp hi, A_exp body)A_ForExp132,2627
A_exp A_BreakExp(A_pos pos)A_BreakExp144,2886
A_exp A_LetExp(A_pos pos, A_decList decs, A_exp body)A_LetExp151,3001
A_exp A_ArrayExp(A_pos pos, S_symbol typ, A_exp size, A_exp init)A_ArrayExp160,3182
A_dec A_FunctionDec(A_pos pos, A_fundecList function)A_FunctionDec170,3402
A_dec A_VarDec(A_pos pos, S_symbol var, S_symbol typ, A_exp init)A_VarDec178,3571
A_dec A_TypeDec(A_pos pos, A_nametyList type)A_TypeDec189,3804
A_ty A_NameTy(A_pos pos, S_symbol name)A_NameTy197,3953
A_ty A_RecordTy(A_pos pos, A_fieldList record)A_RecordTy205,4094
A_ty A_ArrayTy(A_pos pos, S_symbol array)A_ArrayTy213,4248
A_field A_Field(A_pos pos, S_symbol name, S_symbol typ)A_Field221,4394
A_fieldList A_FieldList(A_field head, A_fieldList tail)A_FieldList230,4563
A_expList A_ExpList(A_exp head, A_expList tail)A_ExpList237,4708
A_fundec A_Fundec(A_pos pos, S_symbol name, A_fieldList params, S_symbol result,A_Fundec244,4843
A_fundecList A_FundecList(A_fundec head, A_fundecList tail)A_FundecList255,5077
A_decList A_DecList(A_dec head, A_decList tail)A_DecList262,5227
A_namety A_Namety(S_symbol name, A_ty ty)A_Namety269,5362
A_nametyList A_NametyList(A_namety head, A_nametyList tail)A_NametyList276,5486
A_efield A_Efield(S_symbol name, A_exp exp)A_Efield283,5636
A_efieldList A_EfieldList(A_efield head, A_efieldList tail)A_EfieldList290,5764

table.h,55
typedef struct TAB_table_ *TAB_table;TAB_table10,273

table.c,979
#define TABSIZE TABSIZE10,157
typedef struct binder_ *binder;binder12,178
struct binder_ {void *key; void *value; binder next; void *prevtop;};binder_13,210
struct binder_ {void *key; void *value; binder next; void *prevtop;};key13,210
struct binder_ {void *key; void *value; binder next; void *prevtop;};value13,210
struct binder_ {void *key; void *value; binder next; void *prevtop;};next13,210
struct binder_ {void *key; void *value; binder next; void *prevtop;};prevtop13,210
struct TAB_table_ {TAB_table_14,280
  binder table[TABSIZE];table15,300
  void *top;top16,325
static binder Binder(void *key, void *value, binder next, void *prevtop)Binder20,343
TAB_table TAB_empty(void)TAB_empty26,538
void TAB_enter(TAB_table t, void *key, void *value)TAB_enter45,1106
void *TAB_look(TAB_table t, void *key)TAB_look53,1306
void *TAB_pop(TAB_table t) {TAB_pop63,1513
void TAB_dump(TAB_table t, void (*show)(void *key, void *value)) {TAB_dump76,1757
